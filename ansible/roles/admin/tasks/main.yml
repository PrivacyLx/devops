---

- name: Store ansible_user
  set_fact:
    real_ansible_user: "{{ ansible_user | default(None) }}"

- name: Test if we can connect
  wait_for_connection:
    timeout: 10
  register: bootstrap_connect
  changed_when: no
  ignore_errors: yes

- name: Run setup tasks
  vars:
    ansible_user: "{{ real_ansible_user if bootstrap_connect is succeeded else 'root' }}"
  become: true
  block:
    - name: Gather Ansible facts
      setup:

    - name: Install sudo package
      package:
        name: sudo
        state: latest

    - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
      openssh_keypair:
        path: /tmp/id_ssh_rsa
      register: m_ssh_key
      when: lookup('env', 'MOLECULE_FILE')

    - name: Add user groups
      group:
        name: "{{ item.value.login }}"
        state: present
      with_dict: "{{ adm_acct }}"
      when: item.value.state == 'present'

    - name: Add/remove user accounts
      user:
        comment: "{{ item.value.comment }}"
        group: "{{ item.value.login }}"
        name: "{{ item.value.login }}"
        password_lock: true
        shell: /bin/bash
        state: "{{ item.value.state }}"
      with_dict: "{{ adm_acct }}"

    - name: Template sudoers.d/adm
      template:
        dest: /etc/sudoers.d/adm
        group: root
        mode: 0440
        owner: root
        src: sudoers.j2
        validate: 'visudo -cf %s'

    - name: Add authorized SSH keys
      authorized_key:
        comment: "{{ adm_acct[item].comment }}"
        exclusive: true
        key: "{{ adm_acct[item].sshkey }}"
        state: "{{ adm_acct[item].state }}"
        user: "{{ adm_acct[item].login }}"
      with_items: "{{ adm_logins }}"

    - name: "Lock password for root"
      user:
        name: root
        password_lock: True
