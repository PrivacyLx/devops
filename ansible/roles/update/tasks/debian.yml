---

- name: Safe upgrade of all packages
  apt:
    cache_valid_time: "{{ apt_cache_time }}"
    upgrade: safe

- name: Install unattended-upgrades
  apt:
    pkg: "unattended-upgrades"
    state: present
  when: not unattended_mail

- name: Remove ssmtp package
  apt:
    pkg: ssmtp
    state: absent
    purge: true

- name: Install unattended-upgrades and mail dependencies
  apt:
    pkg: ["unattended-upgrades", "msmtp-mta"]
    state: present
  when: unattended_mail | bool

- name: Create msmtp (email) configuration
  template:
    src: "{{ msmtp_conf }}.j2"
    dest: "{{ msmtp_conf_path }}"
    owner: root
    group: root
    mode: 0644
  # TODO check msmtp hanging for user prompt?
  # notify: check msmtp config
  when: unattended_mail | bool

- name: Create unattended-upgrades configuration
  template:
    src: "{{ item }}.j2"
    dest: "/etc/apt/apt.conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 52unattended-upgrades
    - 20auto-upgrades

# https://github.com/savoirfairelinux/ansible-reboot-if-needed/blob/master/tasks/main.yml
- name: Check if reboot is required
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

# In a normal play, the pause action is only executed once, not once-per-host.
# In this case, we really want to force the once-per-host thing.
# ref http://stackoverflow.com/a/35169496
- name: Prompt for rebooting
  pause:
    prompt: "Press ENTER to reboot {{ item }} now, or Ctrl+C to abort."
  # We need to check for the existence of 'reboot_required_file' first because
  # play_hosts also include hosts that have failed. When a host has failed, it
  # stops executing and thus doesn't have 'reboot_required_file'. And if we try
  # to access 'stat', boom! failure. We don't want that.
  when:
    - reboot_required_file in hostvars[item]
    - hostvars[item]['reboot_required_file'].stat.exists
  with_items: "{{ play_hosts }}"
