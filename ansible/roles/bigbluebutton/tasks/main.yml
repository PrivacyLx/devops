---

- name: Download and install Ansible galaxy dependencies
  block:
    # Bug: ansible-galaxy install --force doesn not work as expected
    # https://github.com/ansible/galaxy/issues/74
    - name: Ensure dependencies "{{ galaxy_path }}" directory is empty
      file:
        state: absent
        path: "{{ galaxy_path }}"

    - name: Git clone BigBlueButton role (git commit as role version)
      git:
        repo: "{{ bbb_git_role }}"
        version: "{{ bbb_role_ver }}"
        dest: "{{ galaxy_path }}/{{ bbb_galaxy_role }}"

    - name: Install BigBlueButton dependencies via Ansible Galaxy
      command: |
          ansible-galaxy install --force --roles-path "{{ galaxy_path }}"
            "{{ item.name }}","{{ item.version }}"
      args:
        creates: "{{ galaxy_path }}/{{ item.name }}"
      with_items:
        # yamllint disable rule:braces
        - { name: "{{ bbb_galaxy_role }}", version: "{{ bbb_role_ver }}" }
        - { name: "{{ nodejs_galaxy_role }}", version: "{{ nodejs_role_ver }}" }
        - { name: "{{ docker_galaxy_role }}", version: "{{ docker_role_ver }}" }
        # yamllint disable rule:braces
  become: false
  delegate_to: localhost

- name: Create NodeJS npm user
  user:
    name: "{{ nodejs_install_npm_user }}"
    create_home: false
    comment: NodeJS npm user

- name: Import BigBlueButton Ansible Galaxy role
  include_role:
    name: "{{ galaxy_path }}/{{ bbb_galaxy_role }}"
    public: true
  vars:
    playbook_dir: "{{ galaxy_path }}/{{ bbb_galaxy_role }}"

- name: Check if default BigBlueButton presentation exists
  delegate_to: localhost
  stat:
    path: "{{ role_path }}/files/{{ bbb_default_pdf }}"
  register: bbb_default_pdf_file

- name: Upload default BigBlueButton presentation
  copy:
    mode: 0644
    src: "{{ role_path }}/files/{{ bbb_default_pdf }}"
    dest: "{{ bbb_nginx_root }}/default.pdf"
  when: bbb_default_pdf_file.stat.exists

- name: Wait 20 seconds for Greenlight DB to initialize
  wait_for:
    timeout: 20
  delegate_to: localhost

- name: Run bbb-conf --status
  command: bbb-conf --status
  register: bbb_conf_status_out

- debug:
    msg: "{{ bbb_conf_status_out }}"
