---

- name: ensure caddy webroot exist
  file:
    path: "{{ caddy_website_root }}"
    state: directory
    owner: caddy
    group: caddy

- name: ensure caddy path exists
  file:
    path: "{{ caddy_path }}"
    state: directory
    owner: caddy
    group: caddy

- name: template files
  template:
    src: "Caddyfile.j2"
    dest: "{{ caddy_path }}/Caddyfile"
    owner: caddy
    group: caddy

# website must be built on a different directory because of the
# permissions under which the docker container builds it
# FIXME run docker as user caddy, if possible
- name: create temporary public directory
  tempfile:
    state: directory
  register: tmp_build
  become_user: caddy

- name: copy hugo dockerfile
  template:
    src: "hugo/Dockerfile"
    dest: "{{ tmp_build.path }}"
    owner: caddy
    group: caddy

- name: Build hugo-{{ hugo_version }} docker image
  docker_image:
    name: "{{ hugo_docker_image }}"
    build:
      path: "{{ tmp_build.path }}"
    source: build

# FIXME - the following commands were commented out because
# now instead the script update-website.sh (file is in templates)
# does the job
#
#- name: build hugo website in container "{{ hugo_docker_image }}"
#  docker_container:
#    name: hugo
#    image: "{{ hugo_docker_image }}"
#    volumes:
#      - "{{ hugo_src_website }}:/src"
#      - "{{ tmp_build.path }}:/output"
#    privileged: no
#  become: yes
#  become_user: caddy
#
#- name: built website permissions are acceptable
#  file:
#    path: "{{ tmp_build.path }}"
#    owner: caddy
#    group: caddy
#    recurse: yes
#
#- name: copy public build website to caddy webroot
#  copy:
#    directory_mode: yes
#    src: "{{ tmp_build.path }}/"
#    dest: "{{ caddy_website_root }}/"
#    remote_src: yes
#    owner: caddy
#    group: caddy
#  notify: "restart caddy"

- name: clone website from repo
  git:
    repo: "{{ hugo_website_git_repo }}"
    dest: "{{ hugo_src_website }}"
  become_user: caddy

- name: deploy script to update the website from latest git
  template:
    src: "update-website.sh.j2"
    dest: "{{ update_website_script_path }}"
    owner: caddy
    group: caddy
    mode: '0700' # make executable

- name: update website
  shell: "{{ update_website_script_path }}"
  become: yes
  become_user: caddy

- name: configure automatic hourly update of website
  cron:
    name: "update website hourly"
    special_time: hourly
    job: "{{ update_website_script_path }}"
    user: caddy
  when:
    git_webhook_enabled|bool == false
