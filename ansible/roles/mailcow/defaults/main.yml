---

mc_timezone: Europe/London
mc_hostname: mail
mc_domain: example.org
mc_notify_email: mail@example.org
mc_fqdn: "{{ mc_hostname }}.{{ mc_domain }}"
mc_backup_dir: /opt/mailcow-backup
mc_compose_name: mailcowdockerized
mc_redis_log_lines: 100
mc_git_repo: https://github.com/mailcow/mailcow-dockerized
# Specific version of mailcow git repository; commit, branch name or tag
mc_git_version: master

# RAM in MB
mc_min_memory: 1500
mc_ip: "{{ ansible_default_ipv4.address }}"
mc_install_dir: /opt/mailcow-dockerized
mc_scripts_dir: "{{ mc_install_dir }}/helper-scripts"
mc_dbname: mailcow
mc_dbpass: "{{ lookup('password', 'length=68 chars=ascii_letters,digits') }}"
mc_dbroot: "{{ lookup('password', 'length=70 chars=ascii_letters,digits') }}"

mc_redir_https: true
# Check for mailcow updates
mc_check_updates: true

# Configure and enable swap
mc_set_swap: true
swap_file_path: /var/cache/swapfile
# dd count input blocks
swap_file_size: 4000000
sysctl_swappiness: '1'

# FreeDNS server
mc_dns_check: true
dig_server: 37.235.1.177

# Check for TCP ports in use by other processes
tcp_ls: "{{ ansible_facts.tcp_listen | selectattr('port', 'in', mc_tcp_ports) | list }}"
# https://mailcow.github.io/mailcow-dockerized-docs/prerequisite-system/#firewall-ports
# Mailcow requires the following ports to be available
mc_tcp_ports:
  - 110
  - 25
  - 4190
  - 443
  - 465
  - 587
  - 80
  - 993
  - 995

# Cron file of Mailcow backup
mc_cron_bak: mailcow_backups
# Cron file of Mailcow backup cleanup
mc_cron_bak_clean: remove_old_backups
